# ==========================================
# = API Gateway Configuration
# ==========================================
spring.application.name=api-gateway
server.port=8080

# ==========================================
# = Eureka Client Configuration
# ==========================================
eureka.client.service-url.defaultZone=${EUREKA_URL:https://ticket-booking-app-id2r.onrender.com/eureka/}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true

# ==========================================
# = Gateway Routes
# ==========================================

# ---------- USER SERVICE ----------
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

# ---------- EVENT SERVICE ----------
spring.cloud.gateway.routes[1].id=event-service
spring.cloud.gateway.routes[1].uri=lb://event-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/events/**

# ---------- BOOKING SERVICE ----------
spring.cloud.gateway.routes[2].id=booking-service
spring.cloud.gateway.routes[2].uri=lb://booking-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/bookings/**

# ---------- ADMIN SERVICE ----------
spring.cloud.gateway.routes[3].id=admin-service
spring.cloud.gateway.routes[3].uri=lb://admin-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/admin/**

# ---------- PAYMENT SERVICE ----------
spring.cloud.gateway.routes[4].id=payment-service
spring.cloud.gateway.routes[4].uri=lb://payment-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/payments/**

# ==========================================
# = Enable Dynamic Routing with Eureka
# ==========================================
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ==========================================
# = Global CORS Configuration
# ==========================================
spring.cloud.gateway.globalcors.cors-configurations[/**].allowed-origin-patterns=*
spring.cloud.gateway.globalcors.cors-configurations[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.cloud.gateway.globalcors.cors-configurations[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations[/**].allow-credentials=true

# ==========================================
# = Timeout / Performance Settings
# ==========================================
spring.cloud.gateway.httpclient.connect-timeout=8000
spring.cloud.gateway.httpclient.response-timeout=15s

# ==========================================
# = Logging Configuration
# ==========================================
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=INFO
logging.level.com.ticketapp=DEBUG

# ==========================================
# = Actuator Health Check
# ==========================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# ==========================================
# = Optional Security Placeholder
# ==========================================
# If you add authentication later, you can secure these routes.
# Example:
# spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
